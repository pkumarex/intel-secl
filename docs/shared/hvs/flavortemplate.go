/*
 * Copyright (C) 2020 Intel Corporation
 * SPDX-License-Identifier: BSD-3-Clause
 */
package hvs

import "github.com/intel-secl/intel-secl/v3/pkg/model/hvs"

// FlavorTemplate response payload
// swagger:parameters FlavorTemplate
type FlavorTemplate struct {
	// in: body
	Body hvs.FlavorTemplate
}

// ---

// swagger:operation GET /flavor-templates/{flavortemplate_id} Flavortemplates Retrieve-FlavorTemplate
// ---
//
// description: |
//   Retrieves a flavor template.
//
// x-permissions: flavor-template:retrieve
// security:
//  - bearerAuth: []
// produces:
// - application/json
// parameters:
// - name: flavortemplate_id
//   description: Unique ID of the flavortemplate
//   in: path
//   required: true
//   type: string
//   format: uuid
// - name: Accept
//   description: Accept header
//   in: header
//   type: string
//   required: true
//   enum:
//     - application/json
// responses:
//   '200':
//     description: Successfully retrieved the flavortemplate
//     content:
//       application/json
//     schema:
//       $ref: "#/definitions/FlavorTemplate"
//   '400':
//     description: Invalid or Bad request
//   '401':
//     description: Unauthorized request
//   '404':
//     description: Flavortemplate record not found
//   '500':
//     description: Internal server error
//
// x-sample-call-endpoint: https://hvs.com:8443/hvs/v2/flavor-templates/d6f81340-b033-4fae-8ccf-795430f486e7
// x-sample-call-output: |
//   {
//       "id": "d6f81340-b033-4fae-8ccf-795430f486e7",
//       "label": "default_uefi",
//       "condition": [
//           "//meta/vendor='Linux'",
//           "//meta/tpm_version/='2.0'",
//           "//meta/uefi_enabled/='true' or //meta/suefi_enabled/='true'"
//       ],
//       "flavor-parts": {
//           "PLATFORM": {
//               "meta": {
//                   "vendor": "Linux",
//                   "tpm_version": "2.0",
//                   "uefi_enabled": true
//               },
//               "pcr_rules": [
//                   {
//                       "pcr": {
//                           "index": 0,
//                           "bank": "SHA256"
//                       },
//                       "pcr_matches": true
//                   }
//               ]
//           },
//           "OS": {
//               "meta": {
//                   "vendor": "Linux",
//                   "tpm_version": "2.0",
//                   "uefi_enabled": true
//               },
//               "pcr_rules": [
//                   {
//                       "pcr": {
//                           "index": 7,
//                           "bank": "SHA256"
//                       },
//                       "pcr_matches": null,
//                       "eventlog_includes": [
//                           "shim",
//                           "db",
//                           "kek",
//                           "vmlinuz"
//                       ]
//                   }
//               ]
//           }
//       }
//   }

// ---

// swagger:operation POST /flavor-templates Flavortemplates Create-FlavorTemplate
// ---
// description: |
//   Flavor Template: Flavor templates are used to implement dynamic flavor generation. It supports definition of rules for Linux & ESXI hosts. The templates need to be defined in JSON format. The rules defined will be used for matching the templates while generating flavors.
//
//    | Attribute                      | Description|
//    |--------------------------------|------------|
//    | ID                             | Unique ID of flavor template. |
//    | Label                          | Name of the flavortemplate to be created. |
//    | Condition                      | The “condition” uses meta-data from the host-manifest to determine if the flavor-template should be applied. An array of 'jsonquery' statements that are used to determine if the template should be executed. For example, “if TBOOT is installed”, use the information in the child “flavor-parts” to copy event-logs from the manifest’s PCR 17 & 18 to the PLATFORM flavor-part. |
//    | FlavorParts                    | One or more flavor-part entities that are generated by the template. |
//
//   FlavorParts: The type or classification of the flavor. For more information on flavor parts, see the
//   product guide.
//   Supported FlavorParts types are, PLATFORM, OS and HOST_UNIQUE
//
//    | Attribute                      | Description|
//    |--------------------------------|------------|
//    | Meta                           | Provides the template-author the option to populate arbitrary key/value pairs that will be copied to flavor-part’s “meta/description” entity. |
//    | PcrRules                       | Instructs the flavor creation engine to copy PCR bank values from the host-manifest to the resulting flavor-part. |
//
//   PcrRules: An array of verification rules that will be applied to a PCR.
//
//    | Attribute                      | Description|
//    |--------------------------------|------------|
//    | PCR                            | Lists the rules that are to be applied to each PCR.  There cannot be duplicate index/banks in this array. |
//    | PcrMatches                     | Setting ‘pcr_matches’ to true in the flavor-template will update the flavor-part to enforce “PCR Matches Constants” rules during flavor verfication. |
//    | EventLogEquals                 | Event log equals contains “eventlog_equals” section will update the flavor-part to enforce “PCR Event Log Equals” rules during verification.  The optional “excluding_tags” element can be used to omit events with a one or more “tags” during verification. |
//    | EventLogIncludes               | EventLogInclude contains “eventlog_includes” section will update the flavor-part to enforce “PCR Event Log Includes” rules during verification. |
//
//   Creates a Flavor template and stores it in the database.
//
// x-permissions: flavor-template:create
// security:
//  - bearerAuth: []
// produces:
// - application/json
// consumes:
// - application/json
// parameters:
// - name: request body
//   required: true
//   in: body
//   schema:
//    "$ref": "#/definitions/FlavorTemplate"
// - name: Content-Type
//   description: Content-Type header
//   required: true
//   in: header
//   type: string
// - name: Accept
//   description: Accept header
//   required: true
//   in: header
//   type: string
// responses:
//   '200':
//     description: Successfully created the flavortemplate.
//     content:
//       application/json
//     schema:
//       $ref: "#/definitions/FlavorTemplate"
//   '400':
//     description: Invalid request body provided
//   '415':
//     description: Invalid Content-Type/Accept Header in Request
//   '500':
//     description: Internal server error
//
// x-sample-call-endpoint: https://hvs.com:8443/hvs/v2/flavor-templates
// x-sample-call-input: |
//    {
//       "label": "default-uefi",
//       "condition": [
//           "//host_info/os_name//*[text()='RedHatEnterprise']",
//           "//host_info/hardware_features/TPM/meta/tpm_version//*[text()='2.0']",
//           "//host_info/hardware_features/UEFI/enabled//*[text()='true'] or //host_info/hardware_features/UEFI/meta/secure_boot_enabled//*[text()='true']"
//       ],
//       "flavor_parts": {
//           "PLATFORM": {
//               "meta": {
//                   "vendor": "Linux",
//                   "tpm_version": "2.0",
//                   "uefi_enabled": true
//               },
//               "pcr_rules": [
//                   {
//                       "pcr": {
//                           "index": 0,
//                           "bank": "SHA256"
//                       },
//                       "pcr_matches": true,
//                       "eventlog_equals": {}
//                   }
//               ]
//           },
//           "OS": {
//               "meta": {
//                   "vendor": "Linux",
//                   "tpm_version": "2.0",
//                   "uefi_enabled": true
//               },
//               "pcr_rules": [
//                   {
//                       "pcr": {
//                           "index": 7,
//                           "bank": "SHA256"
//                       },
//                       "pcr_matches": true,
//                       "eventlog_includes": [
//                           "shim",
//                           "db",
//                           "kek",
//                           "vmlinuz"
//                       ]
//                   }
//               ]
//           }
//       }
//    }
//
// x-sample-call-output: |
//    {
//        "id": "3f8a57a8-f6d7-49ea-8309-0e00b997fbce",
//         "label": "default-uefi",
//         "condition": [
//             "//host_info/os_name//*[text()='RedHatEnterprise']",
//             "//host_info/hardware_features/TPM/meta/tpm_version//*[text()='2.0']",
//             "//host_info/hardware_features/UEFI/enabled//*[text()='true'] or //host_info/hardware_features/UEFI/meta/secure_boot_enabled//*[text()='true']"
//         ],
//         "flavor_parts": {
//             "PLATFORM": {
//                 "meta": {
//                     "vendor": "Linux",
//                     "tpm_version": "2.0",
//                     "uefi_enabled": true
//                 },
//                 "pcr_rules": [
//                     {
//                         "pcr": {
//                             "index": 0,
//                             "bank": "SHA256"
//                         },
//                         "pcr_matches": true,
//                         "eventlog_equals": {}
//                     }
//                 ]
//             },
//             "OS": {
//                 "meta": {
//                     "vendor": "Linux",
//                     "tpm_version": "2.0",
//                     "uefi_enabled": true
//                 },
//                 "pcr_rules": [
//                     {
//                         "pcr": {
//                             "index": 7,
//                             "bank": "SHA256"
//                         },
//                         "pcr_matches": true,
//                         "eventlog_includes": [
//                             "shim",
//                             "db",
//                             "kek",
//                             "vmlinuz"
//                         ]
//                     }
//                 ]
//             }
//         }
//     }

// ---

// swagger:operation GET /flavor-templates Flavortemplates Search-FlavorTemplates
// ---
//
// description: |
//   Retrieves all the flavor templates available in the database.
//
// x-permissions: flavor-template:retrieve
// security:
//  - bearerAuth: []
// produces:
// - application/json
// parameters:
// - name: includeDeleted
//   description: Boolean value to indicate whether the deleted templates should be included in the search.
//   in: query
//   required: false
//   type: string
//   format: bool
// - name: id
//   description: Flavor template which has given uuid value will be returned
//   in: query
//   type: string
//   format: uuid
//   required: false
// - name: label
//   description: Flavor template which has given label value will be returned
//   in: query
//   type: string
//   required: false
// - name: conditionContains
//   description: Flavor template which contains the  given condition will be returned
//   in: query
//   type: string
//   required: false
// - name: flavorPartContains
//   description: Flavor template which contains the  given flavor part will be returned
//   in: query
//   type: string
//   required: false
// - name: Accept
//   description: Accept header
//   in: header
//   type: string
//   required: true
//   enum:
//     - application/json
// responses:
//   '200':
//     description: Successfully retrieved the flavortemplate
//     content:
//       application/json
//     schema:
//       $ref: "#/definitions/FlavorTemplate"
//   '400':
//     description: Invalid or Bad request
//   '401':
//     description: Unauthorized request
//   '404':
//     description: Flavortemplate record not found
//   '500':
//     description: Internal server error
//
// x-sample-call-endpoint: https://hvs.com:8443/hvs/v2/flavor-templates
// x-sample-call-output: |
//   [
//     {
//         "id": "d6f81340-b033-4fae-8ccf-795430f486e7",
//         "label": "default_uefi",
//         "condition": [
//             "//meta/vendor='Linux'",
//             "//meta/tpm_version/='2.0'",
//             "//meta/uefi_enabled/='true' or //meta/suefi_enabled/='true'"
//         ],
//         "flavor-parts": {
//             "PLATFORM": {
//                 "meta": {
//                     "vendor": "Linux",
//                     "tpm_version": "2.0",
//                     "uefi_enabled": true
//                 },
//                 "pcr_rules": [
//                     {
//                         "pcr": {
//                             "index": 0,
//                             "bank": "SHA256"
//                         },
//                         "pcr_matches": true
//                     }
//                 ]
//             },
//             "OS": {
//                 "meta": {
//                     "vendor": "Linux",
//                     "tpm_version": "2.0",
//                     "uefi_enabled": true
//                 },
//                 "pcr_rules": [
//                     {
//                         "pcr": {
//                             "index": 7,
//                             "bank": "SHA256"
//                         },
//                         "pcr_matches": null,
//                         "eventlog_includes": [
//                             "shim",
//                             "db",
//                             "kek",
//                             "vmlinuz"
//                         ]
//                     }
//                 ]
//             }
//         }
//     },
//     {
//         "id": "3f8a57a8-f6d7-49ea-8309-0e00b997fbce",
//         "label": "default-pfr",
//         "condition": [
//           "//meta/vendor='Linux'",
//           "//meta/tpm_version/='2.0'"
//         ],
//         "flavor-parts": {
//             "PLATFORM": {
//                 "meta": {
//                     "vendor":"Linux",
//                     "tpm_version": "2.0",
//                     "uefi_enabled": true
//                 },
//                 "pcr_rules": [
//                     {
//                         "pcr": {
//                             "index": 7,
//                             "bank": "SHA256"
//                         },
//                         "eventlog_includes": ["Inte PFR"]
//                     }
//                 ]
//             }
//         }
//     }
//   ]

// ---

// swagger:operation DELETE /flavor-templates/{flavortemplate_id} Flavortemplates Delete-FlavorTemplate
// ---
//
// description: |
//   Deletes a flavor template from database.
// x-permissions: flavor-template:delete
// security:
//  - bearerAuth: []
// parameters:
// - name: flavortemplate_id
//   description: Unique ID of the flavortemplate
//   in: path
//   required: true
//   type: string
//   format: uuid
// responses:
//   '204':
//     description: Successfully performed lazy delete on flavor template based on flavortemplate_id
//   '400':
//     description: Invalid or Bad request
//   '401':
//     description: Unauthorized request
//   '404':
//     description: Flavortemplate record not found
//   '500':
//     description: Internal server error
//
// x-sample-call-endpoint: https://hvs.com:8443/hvs/v2/flavor-templates/d6f81340-b033-4fae-8ccf-795430f486e7

// ---
